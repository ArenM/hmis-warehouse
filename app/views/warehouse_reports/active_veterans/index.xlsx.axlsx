
wb = xlsx_package.workbook
wb.add_worksheet(name: "Active Veterans") do |sheet|
  title = sheet.styles.add_style(sz: 12, b: true, alignment: {horizontal: :center})
  sheet.add_row([
    'Warehouse Client ID',
    'First Name', 
    'Last Name', 
    'DOB', 
    'SSN',
    'Veteran in',
    'First Date Served',
    'Days Served', 
    'Data Source', 
    'Project Type', 
    'Project', 
    'Entry', 
    'Exit'
  ], :style => title)
  @enrollments = @enrollments.values.flatten(1).group_by{|m| m[:client_id]}
  @clients.each do |client|
    row = [
      client.id, 
      client.FirstName, 
      client.LastName,
      client.DOB, 
      client.SSN,
      client.source_clients.map{ |m| if m.VeteranStatus == 1 then GrdaWarehouse::DataSource.short_name(m.data_source_id) end}.compact.uniq.join(', '),
      client.processed_service_history.first_date_served,  
      client.processed_service_history.days_served,
      @enrollments[client.id].size
    ]
    @enrollments[client.id].each do |enrollment|
      row += [
        enrollment['data_sources.short_name'],
        HUD::project_type_brief(enrollment[:project_type]),
        enrollment[:project_name],
        enrollment[:first_date_in_program],
        enrollment[:last_date_in_program],
      ]
      sheet.add_row(row)
    end
  end

  # @enrollments.values.flatten(1).each do |enrollment|
  #   client = @clients[enrollment[:client_id]]
  #   sheet.add_row([
  #     client.id, 
  #     client.FirstName, 
  #     client.LastName, 
  #     client.DOB, 
  #     client.SSN,
  #     client.source_clients.map{ |m| if m.VeteranStatus == 1 then GrdaWarehouse::DataSource.short_name(m.data_source_id) end}.compact.uniq.join(', '),
  #     client.processed_service_history.first_date_served,  
  #     client.processed_service_history.days_served, 
  #     enrollment['data_sources.short_name'],
  #     HUD::project_type_brief(enrollment[:project_type]),
  #     enrollment[:project_name],
  #     enrollment[:first_date_in_program],
  #     enrollment[:last_date_in_program],
  #   ])
  # end
end