- content_for :page_js do
  :javascript
    $('#new_range').submit(function(e){
      var $form = $(this);
      // disable things *immediately after* submit
      setTimeout(function(){
        $form.find(':input').prop('disabled', true);
      }, 0);
    });

= simple_form_for @range, as: :range, url: polymorphic_path([:warehouse_reports, :client_details, :entries], sub_population: @sub_population), html: { method: :get, class: 'jFilter' } do |f|
  - content_for :form_col_l do
    = render 'warehouse_reports/date_range_filters', f:f
    .form-group.form-check.mb-0
      = check_box_tag(:ph, true, params[:ph].present?, class: 'form-check-input')
      %label.form-check-label.mb-0{for: :ph} PH Only

  - content_for :form_col_r do
    = select_tag(:project_type, options_from_collection_for_select(GrdaWarehouse::Hud::Project::HOMELESS_TYPE_TITLES, :first, :last, params[:project_type]), class: 'select2')
    = f.input :sub_population, collection: GrdaWarehouse::WarehouseReports::Dashboard::Base.available_sub_populations, required: false, include_blank: false, input_html: {class: 'select2'}
    = f.input :organization_ids, collection: GrdaWarehouse::Hud::Organization.options_for_select(user: current_user), as: :grouped_select, group_method: :last, input_html: {multiple: true, class: 'select2'}, selected: @organization_ids, label: 'Organizations', required: false
  .col-sm-3
    = f.input :project_ids, collection: GrdaWarehouse::Hud::Project.options_for_select(user: current_user), as: :grouped_select, group_method: :last, input_html: {multiple: true, class: 'select2'}, selected: @project_ids, label: 'Projects', required: false
    = f.input :project_type, collection: GrdaWarehouse::Hud::Project::HOMELESS_TYPE_TITLES.invert, selected: @project_type_codes, input_html: { multiple: true, class: :select2 }

  - content_for :form_js do
    = render 'warehouse_reports/new_range_js'

  = render 'warehouse_reports/filters', f:f
