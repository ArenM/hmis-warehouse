- title = 'Missing Fields in Reports'
- content_for :title, title
%h1= title
= render '/warehouse_reports/breadcrumbs', tab: 'data-quality'

= render 'filters'

- if @query.valid?
  %canvas#counts{ width: 800, height: 200 }
  %em(style="display:table;margin:0 auto;")
    click on a bar to copy its field and value to the clipboard

- content_for :page_js do
  :javascript
    // prep UI
    var $ss = $('#source-source');
    function hideHideable() {
      console.log(this);
        $('.hideable:visible').addClass('hidden');
        var v = $ss.val(), cz;
        if ( v === 'Data Source' ) {
          cz = 'datas';
        } else if ( v === 'Organization') {
          cz = 'org';
        } else if ( v === 'Project' ) {
          cz = 'proj';
        }
        $('.hideable.' + cz).removeClass('hidden');
    }
    hideHideable();
    $ss.on('change', hideHideable);

    // queue this as a separate event to improve layout speed
    function doTheRest() {
      // clear buttons etc.
      var $columns = $('#columns');
      $('#clear-cols').click(function(){$columns.val(null).trigger('change');});
      function addField(fields) {
        for (var i = 0; i < fields.length; i++) {
          $columns.find('option[value=' + fields[i] + ']').prop('selected', true);
        }
        $columns.trigger('change');
      }
      $('#client-cols').click(function(){addField(#{@query.possible_client_columns.to_json});});
      $('#enrollment-cols').click(function(){addField(#{@query.possible_enrollment_columns.to_json});});
      $('#default-cols').click(function(){addField(#{@query.default_columns.to_json})});
      $('#reset').click(function(){location.reload();});

      // chart stuff
      var data = #{@query.counts.to_a.to_json};
      var labels = data.map(function(a){ return a[0]; });
      var values = data.map(function(a){ return a[1].total; });
      var $chart = $('#counts');
      if ($chart.length) {
        var chart = new Chart($chart,{
          type: 'bar',
          options: {
            legend: {
              display: false
            },
            tooltips: {
              callbacks: {
                label: function (tooltipItem) {
                  var d = data[tooltipItem.index][1], type;
                  var n = tooltipItem.yLabel;
                  if (d.counts_present)
                    type = 'present'
                  else
                    type = 'missing'
                  return type + ': ' + n
                }
              }
            },
            onClick: function(e, ar) {
              if (ar.length) {
                var datum = data[ar[0]._index];
                var text = datum[0] + ': ' + datum[1].total
                App.util.copyToClipboard(text);
              }
            }
          },
          data: {
            labels: labels,
            datasets: [{
              label: 'counts',
              data: values,
              backgroundColor: '#091f2f'
            }]
          }
        });
      }
    }
    setTimeout(doTheRest, 0);
