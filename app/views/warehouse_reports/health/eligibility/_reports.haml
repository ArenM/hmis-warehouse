- if @reports.any?
  %p= paginate @reports
  %table.table.table-sm.table-hover
    %thead
      %tr
        %th Eligibility Request
        %th Created On
        %th Acknowledged
        %th Delete
    %tbody
      - @reports.each do |report|
        %tr
          %td
            = link_to_unless(report.has_batch?, "For #{report.service_date}", "#{warehouse_reports_health_eligibility_url(report)}.txt") do
              For #{report.service_date} (via API in #{pluralize(report.batches.count, 'batch')})
          %td= report.created_at
          %td
            - unless report.batches.present?
              - if report.eligibility_response.present?
                = link_to warehouse_reports_health_eligibility_result_url(report) do
                  %i.icon-checkmark
                  = "(#{report.eligibility_response.eligible_clients} eligible/#{report.eligibility_response.ineligible_clients} ineligible clients)"
            - else
              - responses = report.batch_responses
              - if responses.all?{ |r| r.response.present? }
                - error = responses.detect{ |r| ! r.response.starts_with?('ISA')}&.response
                - if error.blank?
                  - eligible_clients = responses.map{ |r| r.eligible_clients }.sum
                  - ineligible_clients = responses.map{ |r| r.ineligible_clients }.sum
                  %i.icon-checkmark
                  = "(#{eligible_clients} eligible/#{ineligible_clients} ineligible clients)"
                - else
                  %i.icon-warning
                  = error

          %td
            = link_to warehouse_reports_health_eligibility_url(report), method: :delete, class: 'btn btn-danger btn-sm btn-icon-only', data: {confirm: "Are you sure you want to delete this Eligibility Request?"} do
              %i.icon-cross