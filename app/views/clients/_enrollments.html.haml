:ruby
  only_ongoing ||= false
  include_links ||= can_view_projects?
  enrollments = @client.enrollments_for scope
  enrollments = enrollments.select{|m| m[:exit_date].blank?} if only_ongoing
  any_homeless = enrollments.any?{ |e| e[:homeless] }
- if enrollments.any?
  %table.table
    %thead
      %tr
        %th
        %th Program Name < Agency Name
        %th Entry
        %th Exit
        %th Most Recent Day Served
        %th.text-right Days Served
        %th.text-right
          - if any_homeless
            Homeless / Adjusted Days
          - else
            Adjusted Days
        %th.text-right Months Served
        %th Household Members
      - total_days = enrollments.map{|m| m[:days]}.sum
      - total_homeless = enrollments.map{ |m| m[:homeless_days] }.sum
      - total_adjusted_days = enrollments.map{|m| m[:adjusted_days]}.sum
      - total_months = enrollments.map{|e| e[:months_served]}.flatten(1).uniq.size
      %tr
        %th.text-right{colspan: 5} Totals:
        %th.num-cell= total_days
        %th.num-cell
          - if any_homeless
            = total_homeless
            \/
            =total_adjusted_days
          - else
            = total_adjusted_days
        %th.num-cell= total_months
    %tbody
    - enrollments.each do |e|
      - episode_class = ''
      - if e[:new_episode]
        - episode_class = 'enrollment__new-episode'
      %tr{class: episode_class}
        %td.nobr
          %span.id-sqr{ 'data-id' => e[:client_source_id]}
          .enrollment__project_type{class: e[:class]}
            %em.service-type__program-type= e[:project_type]
        %td
          - if include_links
            = link_to e[:project_name], project_path(id: e[:project_id])
          - else 
            = e[:project_name]
        %td= e[:entry_date]
        %td= e[:exit_date]
        %td= e[:most_recent_service]
        %td.num-cell= e[:days]
        %td.num-cell
          - if e[:homeless]
            = e[:homeless_days]
            \/
            = e[:adjusted_days]
          - else
            = e[:adjusted_days]
        %td.num-cell
          = e[:months_served].size
        %td
          - if e[:household].present?
            - e[:household].each do |c|
              = "#{c['FirstName']} #{c['LastName']}"
              Age:
              = c['age']
              %br
- else
  No enrollments on file
