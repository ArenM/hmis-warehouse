= cache(['clients', 'demographics', @client, can_view_full_ssn?, controller_path], expires_in: 4.hours) do
  - authoritative_data_source_ids = GrdaWarehouse::DataSource.authoritative.pluck(:id)
  %table.table.table-striped
    %thead
      %tr
        %th ID
        %th{style: 'width: 18em;'} Name
        %th SSN
        %th{style: 'width: 11em;'} Age
        %th Gender
        %th Race
        %th Ethnicity
        %th Veteran Status
        %th
    %tbody
      %tr
        %td.id_sqr.rollup__square.destination-data-source-tag{data: {toggle: :tooltip, title: 'Data from this row is used in reporting.'}}
          .destination-sqr Warehouse
        %td= @client.name
        %td
          - if can_view_full_ssn?
            = ssn(@client.SSN)
          - else
            = masked_ssn(@client.SSN)
        %td
          - if @client.DOB.present?
            = "#{@client.DOB} (#{@client.age})"
        %td= HUD::gender @client.Gender
        %td= @client.race_fields.map{ |f| HUD::race f }.join ', '
        %td= HUD::ethnicity @client.Ethnicity
        %td= HUD::no_yes_missing @client.VeteranStatus
      - if controller_path.include?('window')
        - source_clients = @client.source_clients.visible_in_window
      - else
        - source_clients = @client.source_clients
      - source_clients.each do |client|
        - if authoritative_data_source_ids.include?(client.data_source_id) && can_create_clients?
          = render 'clients/demographic_row_form', client: client
        - else
          = render 'clients/demographic_row', client: client
