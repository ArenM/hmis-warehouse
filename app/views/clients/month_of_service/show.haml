%br
- date_range = (@start.beginning_of_week..@start.end_of_month.end_of_week)
- groups = @days.values.flatten.map{|m| {group: m[:group], program_name: m[:program_name], service_type: m[:service_type], class: "group_#{m[:group]}"}}.uniq
-# debug @days

%h3= @start.strftime '%B %Y'
%table.client__month_of_service-table
  %colgroup
    - 7.times do
      %col(style="width: 14.23%")
  = date_range.each_slice(7) do |week|
    %tr
      - week_days = week.map{|d| [d, []]}.to_h
      - week.each do |day|
        - if @days[day].present?
          - week_days[day] = @days[day].group_by{|m| m[:group]}
      -# rows_per_day = week_days.max_by(&:length).flatten.count
      - week_days.each do |date,day|
        %td
          - if @start == date.beginning_of_month
            .client__calendar-date
              = date.day
            - groups.each do |g|
              %div{class: g[:class]}
                -# debug day
                - if day.any? && day[g[:group]].present?
                  - day[g[:group]].each do |e|
                    %div{class: e[:class]}
                      %em.service-type__program-type
                        = e[:service_type]
                      - if ! GrdaWarehouse::Hud::Client.service_types.include?(e[:record_type])
                        = "#{@programs[[e[:database_id],e[:program_id]]]&.first&.organization&.OrganizationName}:"
                      = @programs[[e[:database_id],e[:program_id]]].first.ProjectName

