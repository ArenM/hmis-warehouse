- wrapper = if @readonly then :readonly else SimpleForm.default_wrapper end
= render 'breadcrumbs'
%h1= @data_source.name
= simple_form_for(@data_source, url: data_source_path(@data_source), wrapper: wrapper) do |f|
  .row
    .col-sm-8
      %table.table.table-condensed
        %tr
          %th Last Import Run
          %td= @data_source.last_imported_at
        %tr
          %th Date Span
          %td
            - if data_span = @data_source.data_span
              = "#{data_span[:start_date]}-#{data_span[:end_date]}"
        -if ! @data_source.authoritative? && @data_source.uploads.any? && can_view_imports?
          %tr
            %th Uploads
            %td
              = link_to data_source_uploads_path(@data_source) do
                View
        - if @data_source.non_hmis_uploads.any? && current_user.can_upload_dashboard_extras?
          %tr
            %th Dashboard Extras Uploads
            %td
              = link_to 'View', data_source_non_hmis_uploads_path(@data_source)
        - if can_edit_data_sources?
          %tr
            %th
              Visible in the Window into the Warehouse?
            %td
              = f.input :visible_in_window, label: false
        %tr
          %th Viewable by the following users, regardless of visibility in window
          %td= @data_source.users.joins(:roles).where(roles: {can_see_clients_in_window_for_assigned_data_sources: true}).distinct.map(&:name).join(', ')
    .col-sm-4.text-right
      - if ! @data_source.authoritative? && can_upload_hud_zips?
        .data-source__upload-button.mb-4
          = link_to new_data_source_upload_path(@data_source), class: 'btn btn-primary' do
            %span.icon-plus
            Upload HUD HMIS ZIP
      - if can_upload_dashboard_extras?
        .data-source__upload-button
          = link_to new_data_source_non_hmis_upload_path(@data_source), class: 'btn btn-primary' do
            %span.icon-plus
            Upload Dashboard Extras
  - if @data_source.has_data?
    .row.table-utilities
      .col-sm-12
        %h2
          = _('Organizations')
          &amp;
          = _('Projects')
        .table-responsive
          = f.simple_fields_for :organizations, @organizations do |o|
            - org = o.object
            .c-card--flush.mb-5
              %header.row.c-card__header
                .col-sm-8
                  %h3= org.name
                  - if org.dmh
                    Treated as DMH for chronic calculations
                .col-sm-4.text-right
                  - if can_edit_organizations?
                    = link_to organization_contacts_path(organization_id: org.id) do
                      View/Edit Organization Contacts
              %table.table.table-condensed
                %thead
                  %tr
                    %th{style: 'width:30%'}
                      Project
                    %th{style: 'width:10%'}
                      CoC Code
                    %th{style: 'width:10%'}
                      HUD CoC Funded
                      %br
                      Continuum Project
                    %th{style: 'width:15%'} Housing Type
                    %th{style: 'width:5%'} Geocode
                    %th{style: 'width:5%'} Geography Type
                    %th{style: 'width:5%'} Inventory Record?
                %tbody
                  = f.simple_fields_for :projects, org.projects do |proj|
                    - project = proj.object
                    %tr
                      %td
                        .project__name.mb-2
                          .enrollment__project_type{class: "client__service_type_#{project.ProjectType}"}
                            .service-type__program-type{data: {toggle: :tooltip, title: HUD.project_type(project.ProjectType)}}
                              = HUD.project_type_brief project.ProjectType

                          = link_to project.name, project_path(project)
                        .project__tracking-method.mb-2
                          %em.small
                            Tracking Method:
                            = HUD.tracking_method project.TrackingMethod
                        - unless @readonly
                          .project__project-type-override
                            = proj.input :act_as_project_type, collection: ::HUD.project_types.invert, include_blank: 'Use Actual Project Type', label: false

                          .project__confidential
                            = proj.input :confidential, label: 'Confidential?'
                          .project__uses-move-in-date
                            = proj.input :uses_move_in_date, label: 'Uses move-in-date?'

                      %td
                        .o-text--italic.mb-2
                          = project.project_cocs.map(&:CoCCode).join(', ')
                        - unless @readonly
                          = proj.input :hud_coc_code, label: 'Override', input_html: { value: project.project_cocs&.map(&:hud_coc_code).uniq.join(' ')}, wrapper_html: {class: 'mb-2'}

                      %td
                        .mb-2
                          = checkmark_or_x(project.ContinuumProject)
                        - unless @readonly
                          %label Override
                          = proj.input :hud_continuum_funded, label: false
                      %td
                        .mb-2
                          = HUD.housing_type(project.HousingType).presence || 'None'
                        - unless @readonly
                          .mb-4
                            = proj.input :housing_type_override, label: 'Override', input_html: { value: project.housing_type_override}, collection: HUD.housing_types.invert, include_blank: true
                      %td
                        .mb-2
                          = project.geographies&.map(&:Geocode)&.join('; ').presence || 'None'
                        - unless @readonly
                          .mb-4
                            = proj.input :geocode_override, label: 'Override', input_html: { value: project.geographies&.first&.geocode_override}
                      %td
                        .mb-2
                          = project.geographies&.map{|m| HUD.geography_type(m.GeographyType)}&.join('; ').presence || 'None'
                        - unless @readonly
                          .mb-4
                            = proj.input :geography_type_override, label: 'Override', selected: project.geographies&.first&.geography_type_override, collection: HUD.geography_types.invert, include_blank: true
                      %td
                        = checkmark_or_x(project.inventories.present? )
  - unless @readonly
    = f.button :submit, value: _('Update Data Source')
