- if @active_filter
  - filter_class = 'client__filter-active'
- else
  - filter_class = 'client__filter'

.dropdown.o-filtration{class: filter_class}
  %button.btn.btn-secondary.dropdown-toggle{data: {toggle: 'dropdown'}}
    Filter
    %span.caret
  .o-filtration__container.dropdown-menu.dropdown-menu-right.options
    .o-filtration__header
      %h3.client__filter-header Filter clients

    = form_tag(nil, method: :get) do

      -# preserve sort and search for filtering
      - if params[:sort]
        = hidden_field_tag :sort, params[:sort]
      - if params[:direction]
        = hidden_field_tag :direction, params[:direction]
      - if params[:q]
        = hidden_field_tag :q, params[:q]

      .row.o-filtration__option
        .col-sm-12
          %label Dates Served
          .o-filtration__option-row
            .input-group.date{data: {provide: :datepicker}}
              %input.form-control{name: :start_date, type: :date, value: @start_date}
              %span.input-group-addon.icon-calendar
            .o-filtration__separator to
            .input-group.date{data: {provide: :datepicker}}
              %input.form-control{name: :end_date, type: :date, value: @end_date}
              %span.input-group-addon.icon-calendar

      .row.o-filtration__option
        .col-xs-10
          .checkbox
            %label{for: :data_sharing}
              %input#data_sharing.boolean.optional{name: :data_sharing, type: :checkbox, value: 1, checked: @data_sharing}
              = _('Fully signed data sharing agreement')

      .o-filtration__actions.form__actions
        = link_to window_clients_path, class: 'btn btn-secondary' do
          %span.icon-cross.mr-1
          Clear Filters
        %button.btn.btn-primary.ml-auto{type: :submit}
          %span.icon-filter.icon-inline
          Filter


= content_for :page_js do
  :javascript
    (function($) {
      var filter_class = '.#{filter_class}'
      function toggle_clickable(e) {
        if($(e.target).closest(filter_class).length == 0 ) {
          $(filter_class).data('closeable', true);
        }
      }
      $(filter_class).on('hide.bs.dropdown', function (e) {
        var closable = $(this).data('closeable');
        if(closable) {
          $('body').off('click', toggle_clickable);
        }
        return closable;
      });
      $(filter_class).on('show.bs.dropdown', function (e) {
        $(this).data('closeable', false);
        // Make clicking outside of the menu close the menu
        $('body').on('click', toggle_clickable);
      });
      $(filter_class).on('click', '*', function(e) {
        var $target = $(e.target);
        var closeable = $target.parent().data('closeable');
        if($target.hasClass('dropdown-toggle') && closeable == false) {
          $target.parent().data('closeable', true);
        }
      });
    })(jQuery);
