- if @active_filter
  - filter_class = 'client__filter-active'
- else
  - filter_class = 'client__filter'

.dropdown.o-filtration{class: filter_class}
  %button.btn.btn-secondary.dropdown-toggle{data: {toggle: 'dropdown'}}
    Filter
    %span.caret

  .o-filtration__container.dropdown-menu.dropdown-menu-left.options
    .o-filtration__header
      %h3.client__filter-header Status

    = form_tag(nil, method: "get") do
      -# preserve search for filtering
      - if params[:q] && params[:q][:full_text_search]
        = hidden_field_tag 'q[full_text_search]', params[:q][:full_text_search]
      .filters
        - active = params[:filter].blank? || params[:filter][:population] == 'all'
      .input-group
        %label.control-label.w-100{class: "#{active ? :active : ''}"}
          %input.form-control{type: :radio, name: 'filter[population]', value: :all, autocomplete: :off, checked: active} All
        - active = params[:filter].present? && params[:filter][:population] == 'not_engaged'
        %label.control-label.w-100{class: "#{active ? :active : ''}"}
          %input.form-control{type: :radio, name: 'filter[population]', value: :not_engaged, autocomplete: :off, checked: active} Not engaged
        - active = params[:filter].present? && params[:filter][:population] == 'no_activities'
        %label.control-label.w-100{class: "#{active ? :active : ''}"}
          %input.form-control{type: :radio, name: 'filter[population]', value: :no_activities, autocomplete: :off, checked: active} 0 Recent Qualifying Activities
        - active = params[:filter].present? && params[:filter][:population] == 'engagement_ending'
        %label.control-label.w-100{class: "#{active ? :active : ''}"}
          %input.form-control{type: :radio, name: 'filter[population]', value: :engagement_ending, autocomplete: :off, checked: active} Engagement Period Ending

      .o-filtration__actions.form__actions
        = link_to health_patients_path, class:'btn btn-secondary' do
          %span.icon-cross.icon-inline
          Clear Filters
        %button.btn.btn-primary.ml-auto{type: :submit}
          %span.icon-filter.icon-inline.mr-1
          Filter



= content_for :page_js do
  :javascript
    $('.dropdown-toggle').click(function(event){
      $(event.currentTarget).blur()
    })
